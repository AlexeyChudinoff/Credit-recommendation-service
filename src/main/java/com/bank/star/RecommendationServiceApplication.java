package com.bank.star;

import java.io.File;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.event.EventListener;

@SpringBootApplication
public class RecommendationServiceApplication {

  private static final Logger logger = LoggerFactory.getLogger(
      RecommendationServiceApplication.class);

  @Value("${spring.datasource.url:jdbc:h2:file:./data/transaction.mv.db}")
  private String databaseUrl;

  public static void main(String[] args) {
    SpringApplication.run(RecommendationServiceApplication.class, args);
  }

  @EventListener(ApplicationReadyEvent.class)
  public void checkDatabasePath() {
    logger.info("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...");
    logger.info("Database URL: {}", databaseUrl);

    try {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–∑ URL –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .mv.db
      String filePath = databaseUrl.replace("jdbc:h2:file:", "").split(";")[0] + ".mv.db";
      File dbFile = new File(filePath);

      logger.info("–ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: {}", dbFile.getAbsolutePath());
      logger.info("–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {}", dbFile.exists());
      logger.info("–≠—Ç–æ —Ñ–∞–π–ª: {}", dbFile.isFile());
      logger.info("–≠—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {}", dbFile.isDirectory());
      logger.info("–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {} –±–∞–π—Ç", dbFile.length());
      logger.info("–ú–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å: {}", dbFile.canRead());

      // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      File parentDir = dbFile.getParentFile();
      logger.info("–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {}", parentDir.getAbsolutePath());
      logger.info("–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {}", parentDir.exists());

      if (parentDir.exists()) {
        logger.info("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ data:");
        File[] files = parentDir.listFiles();
        if (files != null) {
          for (File file : files) {
            logger.info("   - {} ({} –±–∞–π—Ç, —Ñ–∞–π–ª: {})",
                file.getName(), file.length(), file.isFile());
          }
        }
      }

    } catch (Exception e) {
      logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—É—Ç–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {}", e.getMessage(), e);
    }
  }

}//