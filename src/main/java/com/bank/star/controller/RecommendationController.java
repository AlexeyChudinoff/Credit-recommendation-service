package com.bank.star.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.*;
import com.bank.star.dto.RecommendationResponse;
import com.bank.star.dto.ErrorResponse;
import com.bank.star.service.RecommendationService;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

@RestController
@RequestMapping("/api/v1/recommendations")
@Tag(name = "Recommendation API", description = "API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
public class RecommendationController {

  private static final Logger logger = LoggerFactory.getLogger(RecommendationController.class);

  private final RecommendationService recommendationService;
  private final JdbcTemplate jdbcTemplate;

  @Autowired
  public RecommendationController(RecommendationService recommendationService, JdbcTemplate jdbcTemplate) {
    this.recommendationService = recommendationService;
    this.jdbcTemplate = jdbcTemplate;
  }

  @Operation(
      summary = "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
      description = """
            ## üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
            
            –≠—Ç–æ—Ç endpoint –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ 
            –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—Ç –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
            
            ### üéØ –ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:
            
            **üí∞ Invest 500** (–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Å—á–µ—Ç):
            - ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–µ–±–µ—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
            - ‚úÖ –ù–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤  
            - ‚úÖ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—á–µ—Ç–æ–≤ > 1,000 ‚ÇΩ
            
            **üè¶ Top Saving** (–ü—Ä–µ–º–∏—É–º –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç):
            - ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–µ–±–µ—Ç–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
            - ‚úÖ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π –ø–æ –¥–µ–±–µ—Ç–æ–≤—ã–º –ò–õ–ò —Å–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–º —Å—á–µ—Ç–∞–º ‚â• 50,000 ‚ÇΩ
            - ‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ –¥–µ–±–µ—Ç–æ–≤—ã–º —Å—á–µ—Ç–∞–º
            
            **üí≥ –ü—Ä–æ—Å—Ç–æ–π –∫—Ä–µ–¥–∏—Ç** (–ë–∞–∑–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç):
            - ‚úÖ –ù–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
            - ‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ –¥–µ–±–µ—Ç–æ–≤—ã–º —Å—á–µ—Ç–∞–º
            - ‚úÖ –°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–µ–±–µ—Ç–æ–≤—ã–º —Å—á–µ—Ç–∞–º > 100,000 ‚ÇΩ
            
            ### üë• –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
            - `cd515076-5d8a-44be-930e-8d4fcb79f42d` - –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è **Invest 500**
            - `d4a4d619-9a0c-4fc5-b0cb-76c49409546b` - –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è **Top Saving**  
            - `1f9b149c-6577-448a-bc94-16bea229b71a` - –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è **–ü—Ä–æ—Å—Ç–æ–π –∫—Ä–µ–¥–∏—Ç**
            """
  )
  @ApiResponses(value = {
      @ApiResponse(
          responseCode = "200",
          description = "‚úÖ –£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π",
          content = @Content(schema = @Schema(implementation = RecommendationResponse.class))
      ),
      @ApiResponse(
          responseCode = "400",
          description = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
          content = @Content(schema = @Schema(implementation = ErrorResponse.class))
      ),
      @ApiResponse(
          responseCode = "404",
          description = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ",
          content = @Content(schema = @Schema(implementation = ErrorResponse.class))
      ),
      @ApiResponse(
          responseCode = "500",
          description = "üö® –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
          content = @Content(schema = @Schema(implementation = ErrorResponse.class))
      )
  })
  @GetMapping("/{userId}")
  public ResponseEntity<RecommendationResponse> getRecommendations(
      @Parameter(
          description = "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (UUID)",
          example = "cd515076-5d8a-44be-930e-8d4fcb79f42d",
          required = true
      )
      @PathVariable String userId) {

    logger.info("üîÑ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", userId);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    UUID userUuid = UUID.fromString(userId);
    RecommendationResponse response = recommendationService.getRecommendations(userUuid);

    logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}. –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {}",
        userId, response.getRecommendations().size());
    return ResponseEntity.ok(response);
  }

  @Operation(
      summary = "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
      description = "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
  )
  @GetMapping("/debug/database")
  public ResponseEntity<String> checkDatabase() {
    try {
      StringBuilder result = new StringBuilder();

      // 1. –ü–æ–ª—É—á–∏–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
      List<String> tables = jdbcTemplate.queryForList(
          "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'PUBLIC'",
          String.class
      );

      result.append("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: ").append(tables).append("\n\n");

      // 2. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
      for (String table : tables) {
        result.append("--- –¢–∞–±–ª–∏—Ü–∞: ").append(table).append(" ---\n");

        try {
          // –ü–æ–ª—É—á–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
          List<Map<String, Object>> columns = jdbcTemplate.queryForList(
              "SELECT COLUMN_NAME, TYPE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ?",
              table
          );

          for (Map<String, Object> column : columns) {
            result.append("  ").append(column.get("COLUMN_NAME"))
                .append(" : ").append(column.get("TYPE_NAME"))
                .append("\n");
          }

          // –ü–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
          Integer count = jdbcTemplate.queryForObject(
              "SELECT COUNT(*) FROM " + table, Integer.class);
          result.append("  –ó–∞–ø–∏—Å–µ–π: ").append(count).append("\n\n");

        } catch (Exception e) {
          result.append("  –û—à–∏–±–∫–∞: ").append(e.getMessage()).append("\n\n");
        }
      }

      // 3. –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      result.append("--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è cd515076-5d8a-44be-930e-8d4fcb79f42d ---\n");
      try {
        // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        List<Map<String, Object>> userTransactions = jdbcTemplate.queryForList(
            "SELECT * FROM transactions WHERE user_id = ? LIMIT 5",
            "cd515076-5d8a-44be-930e-8d4fcb79f42d"
        );
        result.append("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").append(userTransactions.size()).append("\n");

        if (!userTransactions.isEmpty()) {
          result.append("–ü–µ—Ä–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ").append(userTransactions).append("\n");
        }
      } catch (Exception e) {
        result.append("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").append(e.getMessage()).append("\n");
      }

      return ResponseEntity.ok(result.toString());

    } catch (Exception e) {
      return ResponseEntity.ok("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: " + e.getMessage());
    }
  }

  @Operation(
      summary = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞",
      description = "Health check endpoint –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞"
  )
  @ApiResponse(
      responseCode = "200",
      description = "‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
  )
  @GetMapping("/health")
  public ResponseEntity<String> health() {
    logger.debug("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞");
    return ResponseEntity.ok("""
                üè¶ Bank Star Recommendation Service
                Status: ‚úÖ OPERATIONAL
                Version: 1.0.0
                Timestamp: %s
                """.formatted(LocalDateTime.now()));
  }

  @Operation(
      summary = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ",
      description = "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Å–µ—Ä–≤–∏—Å–∞"
  )
  @ApiResponse(
      responseCode = "200",
      description = "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞"
  )
  @GetMapping("/info")
  public ResponseEntity<String> info() {
    return ResponseEntity.ok("""
                üè¶ Bank Star Recommendation Service v1.0.0
                
                üìä –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
                ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
                ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–æ–±–∏–ª—å–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ –ª–∏—á–Ω—ã–º –∫–∞–±–∏–Ω–µ—Ç–æ–º
                ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                
                üîß –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:
                ‚Ä¢ Java 17, Spring Boot 3.2
                ‚Ä¢ H2 Database (read-only)
                ‚Ä¢ Spring JDBC Template
                ‚Ä¢ Swagger/OpenAPI 3.0
                
                üë• –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                """);
  }

  @Operation(
      summary = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞",
      description = "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞"
  )
  @ApiResponse(
      responseCode = "200",
      description = "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞"
  )
  @GetMapping("/stats")
  public ResponseEntity<String> stats() {
    return ResponseEntity.ok("""
                üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:
                
                ‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: 3
                ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: Invest 500, Top Saving, –ü—Ä–æ—Å—Ç–æ–π –∫—Ä–µ–¥–∏—Ç
                ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: < 100ms
                ‚Ä¢ –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö: JSON
                ‚Ä¢ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∫–ª—é—á–µ–Ω–æ
                
                üéØ –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞:
                –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                –∏ —Å—Ç—Ä–æ–≥–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º –±–∞–Ω–∫–∞.
                """);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ UUID
   */
  @ExceptionHandler(IllegalArgumentException.class)
  public ResponseEntity<ErrorResponse> handleIllegalArgument(IllegalArgumentException e) {
    logger.warn("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ UUID: {}", e.getMessage());

    ErrorResponse error = new ErrorResponse(
        "VALIDATION_ERROR",
        "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.getMessage(),
        LocalDateTime.now()
    );

    return ResponseEntity.badRequest().body(error);
  }

  /**
   * –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
   */
  @ExceptionHandler(Exception.class)
  public ResponseEntity<ErrorResponse> handleAllExceptions(Exception e) {
    logger.error("üö® –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {}", e.getMessage(), e);

    ErrorResponse error = new ErrorResponse(
        "INTERNAL_SERVER_ERROR",
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        LocalDateTime.now()
    );

    return ResponseEntity.internalServerError().body(error);
  }
}